name: Persistent VPS Bot

on:
  workflow_dispatch:
    inputs:
      name:
        description: 'VPS Name'
        required: true
      pass:
        description: 'VPS Password'
        required: true
  schedule:
    - cron: '0 */6 * * *'

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy VPS
    steps:
      - name: Set up VPS Name & Password
        run: |
          echo "VPS_NAME=${{ github.event.inputs.name || 'AutoVPS' }}" >> $GITHUB_ENV
          echo "VPS_PASS=${{ github.event.inputs.pass || 'vpspass123' }}" >> $GITHUB_ENV

      - name: Install Required Tools
        run: |
          sudo apt update
          sudo apt install -y curl unzip wget ssh sudo

      - name: Setup Tailscale
        run: |
          curl -fsSL https://tailscale.com/install.sh | sh
          sudo tailscale up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} --ssh --hostname $VPS_NAME
          echo "TAIL_IP=$(tailscale ip -4)" >> $GITHUB_ENV

      - name: Install SSHx
        run: |
          curl -fsSL https://sshx.io/get | sh
          sudo mv sshx /usr/local/bin/
          chmod +x /usr/local/bin/sshx

      - name: Setup rclone for backup
        run: |
          echo "${{ secrets.RCLONE_CONFIG }}" > rclone.conf
          mkdir -p /root/mydata
          echo "Hello from $VPS_NAME at $(date)" > /root/mydata/info.txt
          rclone --config rclone.conf copy /root/mydata remote:VPS_Backups/$VPS_NAME

      - name: Create SSHx Session
        id: sshx
        run: |
          SSHX_CMD=$(sshx -n)
          echo "SSHX_CMD=$SSHX_CMD" >> $GITHUB_ENV
          echo "::set-output name=cmd::$SSHX_CMD"

      - name: Send Discord DM
        run: |
          curl -X POST "https://discord.com/api/v10/users/@me/channels" \
          -H "Authorization: Bot ${{ secrets.DISCORD_BOT_TOKEN }}" \
          -H "Content-Type: application/json" \
          -d "{\"recipient_id\": \"${{ secrets.DISCORD_USER_ID }}\"}" > dm.json

          CHANNEL_ID=$(jq -r '.id' dm.json)

          curl -X POST "https://discord.com/api/v10/channels/$CHANNEL_ID/messages" \
          -H "Authorization: Bot ${{ secrets.DISCORD_BOT_TOKEN }}" \
          -H "Content-Type: application/json" \
          -d "$(jq -n --arg name "$VPS_NAME" \
                       --arg ip "$TAIL_IP" \
                       --arg sshx "${{ steps.sshx.outputs.cmd }}" \
                       --arg pass "$VPS_PASS" \
                       '{
                         content: "**‚úÖ VPS Deployed!**\n\nüñ•Ô∏è Name: \($name)\nüåê IP: \($ip)\nüîê Password: \($pass)\nüíª SSHx: `\($sshx)`"
                       }')"

      - name: Sleep Until Next Cycle
        run: sleep 21600  # 6 hours
