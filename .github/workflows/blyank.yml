name: LithManager Advanced Windows VM with Tailscale

on:
  workflow_dispatch:
  schedule:
    - cron: "0 */6 * * *"  # Every 6 hours

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 360

    steps:
    - name: Enable Remote Desktop & Create User
      shell: pwsh
      run: |
        Write-Output "Enabling RDP and creating user..."
        Set-ItemProperty -Path "HKLM:\System\CurrentControlSet\Control\Terminal Server" -Name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        net user lithuser Password123 /add
        net localgroup administrators lithuser /add

    - name: Tighten Windows Firewall (allow only essential inbound)
      shell: pwsh
      run: |
        Write-Output "Configuring firewall rules..."
        # Block all inbound first
        Set-NetFirewallProfile -Profile Domain,Private,Public -DefaultInboundAction Block
        # Allow RDP
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        # Allow outbound all (default)
        Set-NetFirewallProfile -Profile Domain,Private,Public -DefaultOutboundAction Allow

    - name: Install Google Chrome and Tailscale
      shell: pwsh
      run: |
        Write-Output "Installing Chrome and Tailscale..."
        choco install -y googlechrome tailscale

    - name: Start Tailscale VPN
      shell: pwsh
      run: |
        Write-Output "Starting Tailscale service and authenticating..."
        Start-Service tailscaled
        tailscale up --authkey $env:TAILSCALE_AUTHKEY --accept-routes --accept-dns

    - name: Show IP addresses
      shell: pwsh
      run: |
        $publicIp = (Invoke-RestMethod -Uri 'http://ifconfig.me/ip').Trim()
        $tailscaleIp = tailscale ip -4
        Write-Output "Public IP: $publicIp"
        Write-Output "Tailscale IP: $tailscaleIp"

    - name: Download multiple apps/games
      shell: pwsh
      run: |
        Write-Output "Downloading your apps..."
        Invoke-WebRequest -Uri "https://example.com/game.exe" -OutFile "C:\game.exe"
        Invoke-WebRequest -Uri "https://example.com/tool.exe" -OutFile "C:\tool.exe"

    - name: Run multiple apps in background
      shell: pwsh
      run: |
        Write-Output "Starting game and tools..."
        Start-Process -FilePath "C:\game.exe"
        Start-Process -FilePath "C:\tool.exe"
        Write-Output "Started processes: game.exe, tool.exe"

    - name: Graceful shutdown warning and countdown
      shell: pwsh
      run: |
        Write-Output "WARNING: Runner will restart in 5 minutes..."
        Start-Sleep -Seconds 300

    - name: Keep runner alive for remaining time
      shell: pwsh
      run: |
        Write-Output "Keeping runner alive..."
        Start-Sleep -Seconds 18600  # 6 hours minus 5 minutes countdown
